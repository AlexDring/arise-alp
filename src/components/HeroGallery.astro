---
import { storyblokEditable } from "@storyblok/astro"
import { Image } from "astro:assets"
import { renderRichTextRenderer } from "../utils/richTextRenderer"

const { blok } = Astro.props

const content = renderRichTextRenderer(blok.text)

const images = blok.images

const firstTwoImages = images.slice(0, 2)
const nextThreeImages = images.slice(2, 5) // Adjust slice range if there are fewer than 5 images
---

<section class="full-width observe" {...storyblokEditable(blok)}>
  <div class="gallery-grid">
    <div class="gallery-grid__text">
      <!-- <h1>{blok.heading}</h1> -->
      <Fragment set:html={content} />
    </div>
    <div class="gallery-grid__grid">
      {
        nextThreeImages.map((image) => (
          <img
            src={`${image.filename}/m/275x0/filters:format(webp)`}
            alt={image.alt || "Image"}
          />
        ))
      }
      <p class="gallery-grid__subheading">{blok.accent}</p>
    </div>
    <div class="gallery-grid__stacked">
      {
        firstTwoImages.map((image) => (
          <img
            src={`${image.filename}/m/573x0/filters:format(webp)`}
            alt={image.alt || "Image"}
          />
        ))
      }

      <p class="gallery-grid__subheading">{blok.accent}</p>
    </div>
  </div>
</section>

<style lang="scss">
  /* section {
    background: radial-gradient(
        29.4% 72.86% at 49.06% 49.92%,
        rgba(255, 166, 158, 0.4) 0%,
        rgba(255, 166, 158, 0) 100%
      ),
      radial-gradient(
        235.27% 59.43% at 92.5% 3.53%,
        rgba(32, 87, 224, 0.6) 0%,
        rgba(255, 255, 255, 0.85) 100%
      );
  } */
  .observe {
    .gallery-grid__subheading,
    img {
      opacity: 0;
      transform: translateY(30px);
    }
    &.in-view {
      .gallery-grid__subheading,
      img {
        opacity: 1;
        transform: translateY(0);
      }
    }
  }
  .gallery-grid {
    column-count: 2;
    column-gap: var(--spacing-md);
    padding-top: calc(var(--spacing-lg) * 2);
    padding-bottom: calc(var(--spacing-lg) * 2);
    @media (max-width: 50rem) {
      column-count: 1;
      display: grid;
      gap: var(--spacing-md);
      .gallery-grid__grid {
        order: 3;
      }
      .gallery-grid__stacked {
        order: 2;
      }
    }
  }
  .gallery-grid__text {
    /* margin-bottom: var(--spacing-lg); */
    margin-bottom: 55px;
    padding-inline: var(--spacing-md);
    p {
      font-size: 1.3125rem;
    }
    @media (max-width: 50rem) {
      margin-bottom: 0;
    }
  }
  .gallery-grid__grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--spacing-md);
    align-items: end;

    img:nth-child(1) {
      grid-column: 1;
      grid-row: 1 / span 2;
      transition: 0.6s ease-in all;

      @media (max-width: 50rem) {
        margin-bottom: auto;
      }
    }
    img:nth-child(2) {
      grid-column: 2;
      aspect-ratio: 3 / 2;
      transition: 0.8s ease-in all;
      @media (max-width: 50rem) {
        display: none;
      }
    }
    img:nth-child(3) {
      aspect-ratio: 8 / 7;
      margin-bottom: var(--spacing-lg);
      transition: 1s ease-in all;
    }
    .gallery-grid__subheading {
      display: none;
    }
    @media (max-width: 50rem) {
      img:nth-child(2) {
        display: block;
      }
    }
  }
  .gallery-grid__stacked {
    display: grid;
    gap: var(--spacing-md);
    img {
      aspect-ratio: 5 / 3;
      transition: 0.6s ease all;
      &:nth-child(2) {
        transition: 0.8s ease all;
      }
    }
    @media (max-width: 50rem) {
      img:nth-child(2),
      .gallery-grid__subheading {
        display: none;
      }
    }
  }
  .gallery-grid__subheading {
    font-size: 1.3rem;
    font-family: var(--font-heading);
    font-weight: 700;
    transition: 0.6s ease-in all;
  }
  img {
    object-fit: cover;
    height: auto;
    width: 100%;
    border-radius: var(--border-rad);
  }
</style>
