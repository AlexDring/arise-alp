---
import { storyblokEditable } from '@storyblok/astro'

const { blok } = Astro.props
---

<section class="full-width" {...storyblokEditable(blok)}>
  <div class="scroll-section__text">
    <h2>{blok.heading}</h2>
    <p>{blok.content}</p>
  </div>
  <div class="scroll-section">
    <div class="scroll-section__sticky-wrapper">
      <div class="scroll-section__container">
        {
          blok.scroll_item.map((item) => (
            <div class="scroll-section__item">
              <img src={item.image.filename} alt={item.image.alt} />
              <div class="scroll-section__item-content">
                <p class="scroll-section__item-title">{item.title}</p>
                <p class="scroll-section__item-description">
                  {item.description}
                </p>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<style lang="scss">
  .full-width {
    grid-template-columns:
      [full-width-start] minmax(20px, 1fr)
      [content-start] 1170px [content-end] minmax(20px, 1fr)
      [full-width-end];
    padding: 100px 0;
  }
  .scroll-section {
    padding: 60px 0;
    // height: 500vh;
    // background-color: #f0f0f0;
    // grid-template-columns:
    //   [full-width-start] minmax(20px, 1fr)
    //   [content-start] 1170px [content-end] minmax(20px, 1fr)
    //   [full-width-end];
    // overflow: hidden;
  }
  .scroll-section__sticky-wrapper {
    width: 100%;
    // overflow: hidden;
    position: sticky;
    top: 60px;
    will-change: transform;
    align-self: start;
  }
  .scroll-section__container {
    position: relative;
    display: flex;
  }
  .scroll-section__item {
    height: 75vh;
    /* width: 500vw; */
    width: 25vw;
    display: flex;
    flex-shrink: 0;
    justify-content: start;
    align-items: end;
    // padding: 0 5vw;
    padding: 15px 30px 15px 15px;
    margin-right: 30px;
    position: relative;
    &:before {
      content: '';
      background: radial-gradient(
        circle at 20% 100%,
        rgb(26 26 26 / 80%) 0%,
        rgba(255, 166, 158, 0) 70%
      );
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
    }
    img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    &-content {
      z-index: 1;
      > p {
        color: #fff;
        margin-bottom: 0;
      }
    }
    &-title {
      font-size: 1.5rem;
      font-weight: 700;
    }
  }
  .scroll-section__text {
    max-width: 51.25rem;
  }
</style>

<script>
  const windowWidth = window.innerWidth
  const offSetWidth = windowWidth - 1170
  const scrollSectionLength =
    document.querySelector('.scroll-section__container').scrollWidth +
    offSetWidth +
    100
  const distanceFromTop = document.querySelector('.scroll-section').offsetTop
  const scrollDistance = distanceFromTop + scrollSectionLength - windowWidth

  const sectionHeight = scrollSectionLength - windowWidth

  document.querySelector('.scroll-section').style.height =
    `${900 + sectionHeight}px`
  // document.querySelector('.scroll-section__sticky-wrapper').style.marginLeft =
  //   `${offSetWidth / 2}px`

  window.addEventListener('scroll', function () {
    const scrollTop = window.pageYOffset
    if (scrollTop >= distanceFromTop && scrollTop <= scrollDistance) {
      {
        this.document.querySelector(
          '.scroll-section__sticky-wrapper'
        ).style.transform = `translateX(-${scrollTop - distanceFromTop}px)`
      }
    }
  })

  console.log(
    { windowWidth },
    { scrollSectionLength },
    { distanceFromTop },
    { scrollDistance },
    { sectionHeight }
  )
</script>
